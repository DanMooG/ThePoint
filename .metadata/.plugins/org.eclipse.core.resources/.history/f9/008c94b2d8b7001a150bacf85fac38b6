package Func;

import java.io.FileInputStream;
import java.io.InputStream;
import java.util.List;
import java.util.Vector;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDFont;
import org.apache.pdfbox.pdmodel.font.PDType0Font;
import org.apache.pdfbox.pdmodel.font.PDType1Font;

import DTO.P_KeyPoint_DTO;

public class MakePDF {

	public MakePDF(List<P_KeyPoint_DTO> val) throws Exception {
		Vector<String> contents = new Vector<String>();
		for(int i = 0; i < val.size(); i++) {
			if(val.get(i).getP_Point_Info() != null) {
				String[] point = val.get(i).getP_Point_Info().split("\n");
				for(int j = 0; j < point.length; j++) {
					System.out.println(point[j]);
				}	
			}
		}
	}

	public String makeSpace(int[] kind) {
		String result = "";

		if (kind[0] != 0 && kind[1] == 0 && kind[2] == 0 && kind[3] == 0 && kind[4] == 0) { // 1분류
			result = "  ";
		} else if (kind[0] != 0 && kind[1] != 0 && kind[2] == 0 && kind[3] == 0 && kind[4] == 0) { // 2분류
			result = "    ";
		} else if (kind[0] != 0 && kind[1] != 0 && kind[2] != 0 && kind[3] == 0 && kind[4] == 0) { // 3분류
			result = "      ";
		} else if (kind[0] != 0 && kind[1] != 0 && kind[2] != 0 && kind[3] != 0 && kind[4] == 0) { // 4분류
			result = "        ";
		} else if (kind[0] != 0 && kind[1] != 0 && kind[2] != 0 && kind[3] != 0 && kind[4] != 0) { // 5분류
			result = "          ";
		}

		return result;
	}
}
