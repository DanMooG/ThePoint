package Func;

import java.io.FileInputStream;
import java.io.InputStream;
import java.util.List;
import java.util.Vector;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDFont;
import org.apache.pdfbox.pdmodel.font.PDType0Font;
import org.apache.pdfbox.pdmodel.font.PDType1Font;

import DTO.P_KeyPoint_DTO;

public class MakePDF {

	public MakePDF(List<P_KeyPoint_DTO> val) throws Exception {
		// Create a document and add a page to it
		PDDocument document = new PDDocument();
		PDPage page = new PDPage();
		document.addPage(page);

		// Create a new font object selecting one of the PDF base fonts
		InputStream fontStream = new FileInputStream("fonts/NanumGothic.ttf");
		PDType0Font fontNanum = PDType0Font.load(document, fontStream);
		// PDFont font = PDType1Font.HELVETICA_BOLD;

		// Start a new content steam which will "hold" the to be created content
		PDPageContentStream contentStream = new PDPageContentStream(document, page);

		// Define a text content stream using the selected font, moving the cursor and
		// drawing the text "Hello World"
		contentStream.beginText();
		contentStream.setFont(fontNanum, 12);

		int x = 25, y = 760;
		contentStream.newLineAtOffset(x, y);
		for (int i = 0; i < val.size(); i++) {
			String contents = new String();
			contentStream.setLeading(15f);
			
			//목차
			int[] kind = new int[5];
			kind[0] = val.get(i).getP_Kind1();
			kind[1] = val.get(i).getP_Kind2();
			kind[2] = val.get(i).getP_Kind3();
			kind[3] = val.get(i).getP_Kind4();
			kind[4] = val.get(i).getP_Kind5();

			//앞 여백
			contents = makeSpace(kind);
			contents = contents.substring(0, contents.length()-2);
			
			//목차 그리기
			contents += val.get(i).getP_Kind_Info();
			contentStream.drawString(contents);
			contentStream.newLine();
			
			//내용
			
		}

		contentStream.endText();

		// Make sure that the content stream is closed.
		contentStream.close();

		// Save the results and ensure that the document is properly closed.
		document.save("C:\\Users\\tytyj\\Documents\\ThePoint.pdf");
		document.close();
	}

	public String makeSpace(int[] kind) {
		String result = "";

		if (kind[0] != 0 && kind[1] == 0 && kind[2] == 0 && kind[3] == 0 && kind[4] == 0) { // 1분류
			result = "  ";
		} else if (kind[0] != 0 && kind[1] != 0 && kind[2] == 0 && kind[3] == 0 && kind[4] == 0) { // 2분류
			result = "    ";
		} else if (kind[0] != 0 && kind[1] != 0 && kind[2] != 0 && kind[3] == 0 && kind[4] == 0) { // 3분류
			result = "      ";
		} else if (kind[0] != 0 && kind[1] != 0 && kind[2] != 0 && kind[3] != 0 && kind[4] == 0) { // 4분류
			result = "        ";
		} else if (kind[0] != 0 && kind[1] != 0 && kind[2] != 0 && kind[3] != 0 && kind[4] != 0) { // 5분류
			result = "          ";
		}

		return result;
	}
}
